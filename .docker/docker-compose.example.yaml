version: "3.7"

services:
  gateway:
    image: spectacles/gateway:latest
    container_name: gateway
    env_file: ../.env
    environment:
      REDIS_URL: redis:6379
      DISCORD_EVENTS: >-
        READY,
        GUILD_CREATE,
        GUILD_DELETE,
        GUILD_UPDATE,
        MESSAGE_CREATE,
        INTERACTION_CREATE,
        MESSAGE_REACTION_ADD,
        MESSAGE_REACTION_REMOVE,
        MESSAGE_REACTION_REMOVE_ALL
      DISCORD_INTENTS: >-
        GUILDS,
        GUILD_MESSAGES,
        GUILD_MESSAGE_REACTIONS,
        DIRECT_MESSAGES
      BROKER_TYPE: redis
      BROKER_GROUP: gateway
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  proxy:
    image: spectacles/proxy:latest
    container_name: proxy
    environment:
      REDIS_URL: redis:6379
      BROKER_GROUP: discord
      BROKER_EVENT: REQUEST
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - 6379:6379
    expose:
      - 6379
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 10s
      timeout: 5s

  database:
    container_name: database
    build: ./postgres
    volumes:
      - postgres:/data
    environment:
      POSTGRES_USER: ""
      POSTGRES_PASSWORD: ""
      POSTGRES_DB: ""
    ports:
      - 5432:5432

  handler:
    container_name: handler
    build: ../project/handler
    env_file: ../.env
    environment:
      REDIS_URL: redis
      POSTGRES_HOT: database

volumes:
  postgres:
